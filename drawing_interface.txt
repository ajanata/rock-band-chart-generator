/songname.php?<shortname>

return the long name of the given short name, or an empty string if invalid.

==========

/chartgenapi.php?game=<game>&song=<shortname>(&(guitar|bass|drums|vocals)=<difficulty>)+(&input=<url>)?

normal chartgen.php arguments above (except difficulty is value of instrument), also takes a bunch of data on POST or at <url>:

list of commands (details below):

user <username> <md5 hash of users's salt + shortname>
comment <text...>
option <name> <value>
color <#> <r> <g> <b>
coloralpha <#> <r> <g> <b> <a>
colorname <#> <text...>
string <size> <color> <x> <y> <text...>
line <instrument> <color> <start> <end> <y> <height>
fill <instrument> <color> <start> <end> <height>
measscore <instrument> <#> <score>
totalscore <instrument> <#> <score>
bonusscore <instrument> <#> <score>
whammy <instrument> <#> <amount>


Blank lines in the input are ignored.

==========

NOTE: In all commands below that take pixel coordinates, the bottom 60 rows of the image are reserved, and the leftmost 300 and rightmost 200 columns of the top 45 rows are reserved. Any attempt to draw into this area will result in the coordinates being shifted to fit within this restriction.

user command
user <username> <md5 hash of users's salt + shortname>
This command allows some primitive user access control. Each user is given a user name and a password which is used as a salt to the MD5 function. The proper user command for a user with name "jsmith" and salt "pepper" for song "stillalive" would be:
print "user jsmith " . MD5("pepper" . "stillalive")
Each chart generation request is logged with the shortname of the song and the username of the accessor.
Example:
user jsmith 4730cf1cf07f2d0daddf5efdaf55c2cb


comment command
comment <text...>
The remainder of the line is ignored.


option command
option <name> <value>
Allows certain measurements of the chart to be adjusted. Any option commands must immediately follow the user command and my be interspersed with comment commands, however as soon as a non-comment and non-option command is encountered, no further option commands may be processed.
All of these options default to the same values as used for the "wide" blank charts (that is, single-instrument charts and two-instrument combinations involving vocals).
Available options:
shift <y>: Shifts the chart down <y> pixels, allowing blank space to draw text. The header information at the top of the image is not shifted down. 0 <= y <= 1000. Defaults to 0.
width <w>: Specifies the width of the image, <w> pixels. As many measures that wholly fit on a line will be drawn on every line. 1000 <= w <= 3000. Defaults to 1010.
ppqn <w>: Specifies the width of a quarter note beat on the chart, <w> pixels. All other commands that depend on the width of a beat know how to handle this changing. 20 <= w <= 480 (the number of MIDI ticks per quarter note; larger values would produce no higher resolution of note placement). Defaults to 60.
lineheight <h>: Specifies the height of a notechart line (the distance between the lines for the green and red notes, for instance), <h> pixels. DOES NOT affect the height of gems or sustain lines. Vocal chart lines are <h>/2 pixels high. The line command below is NOT scaled by this, but the negative range is extended to -5*<h>. 10 <= h <= 40. Defaults to 12.
tempoprecision <d>: Specifies the number of decimal places to ROUND tempo values to. Should be scaled roughly with ppqn above. Currently DOES NOT mean "show <d> sigfigs." 0 <= d <= 5. Defaults to 1.


color command
color <#> <r> <g> <b>
The color command defines a color which can be used in subsequent commands. By default, no colors are defined. At least one color must be defined to draw any new information on the chart. Numbers need not be contiguous, and colors may NOT be redefined. (The number may also be a single word, if this is easier.) The r, g, and b values are the red, green, and blue values of the color desired in base 10 format. See php imagecolorallocate for more details.
Example:
comment Assign color 1 to be pure red
color 1 255 0 0
comment Assign color 2 to be black
color 2 0 0 0


coloralpha command
coloralpha <#> <r> <g> <b> <a>
Creates a color using php imagecolorallocatealpha. <a> is the alpha level, 0 <= a <= 127.
Example:
coloralpha blendedred 255 0 0 64


colorname command
colorname <#> <text...>
Adds an entry for a color to the key at the top-right of the image. The gray background is extended and <text> is drawn in color <#> under the default colors listed. Multiple colorname commands are drawn from left to right.
Example:
colorname 1 Activation


string command
string <size> <color> <x> <y> <instrument>? <text...>
Draws a string on the image. This command has a few different overloads depending on the parameters passed for the coordinates. Font <size> is specified as in php imagestring (1-5, 5 being largest). The <color> is a color number as defined above. Text that goes off the right side or bottom of the image is clipped.
Note that text that would go into the reserved area at the top-right of the image is adjusted to be right-aligned next to this area. You may use this to your advantage.
If <y> is positive, then <x> and <y> are absolute coordinates in the image. The top-left of the text will begin <x> pixels to the right of and <y> pixels below the top-left corner of the image.
If <y> is negative, then <x> and <y> are relative to the bottom-left corner of the image. The top-left of the text will begin <x> pixels to the right of and <y> pixels above the bottom-left corner of the image.
If <y> is zero, then <x> is the MIDI tick to draw the text at. This text would be drawn in the same location as drum fill delays, vocal phrase gaps, solo note counts, and BRE estimates are. <instrument> specifies which track to draw above.
Example:
string 5 1 200 50 This red text is at absolute coordinates (200, 50) in the largest font.
string 1 2 0 -50 This black text is in the leftmost column 50 pixel above the bottom of the image in the smallest font.
string 3 2 480 0 guitar This black text is in the medium font above the 1st beat on the guitar track


line command
line <instrument> <color> <start> <end> <y> <height>
Draws a <height> pixel (<=5) tall line from <start> to <end> MIDI ticks <y> pixels (-48 <= y <= 30) above the note staff for <instrument> (guitar, bass, drums, vocals) using <color> as defined above. 
Example:
comment Draw a 3 pixel high red line 30 pixels above the first beat of the guitar track
line guitar 1 0 480 30 3


fill command
fill <instrument> <color> <start> <end> <height>
Draws a background fill in <color> from <start> to <end> MIDI ticks extending <height> (<=30) pixels above and below the note staff for <instrument>.
Example:
comment Draw a black box behind the first two beats of the guitar track, extending 10 pixels above and below the note track
fill guitar 2 0 960 10


score adjustment commands
measscore <instrument> <#> <score>
totalscore <instrument> <#> <score>
bonusscore <instrument> <#> <score>
These commands adjust the scores below the right side of measures. measscore sets the black number, totalscore sets the red number, and bonusscore sets the green number. If bonusscore does not exist, it is not drawn. bonusscore should only be updated after something which would affect it (a solo, for instance).
measscore should not need set to remain consistent with debr's Guitar Hero optimal path images, but is provided for completeness.
Measure numbers start at 1.
Example:
comment 500 points available in the 10th guitar measure
measscore guitar 10 500
comment Set both totalscore for the 10th guitar measure to 9001
totalscore guitar 10 9001
comment Set bonusscore to a different score than the totalscore for the 15th guitar measure so they are both drawn
totalscore guitar 15 50000
bonusscore guitar 15 90000


whammy command
whammy <instrument> <#> <amount>
Overrides the whammy amount drawn at the bottom-right of measures (taking early whammy into account, for instance).
comment Let's say there was .3 beats of early whammy in a measure with 2 beats of normal whammy
whammy guitar 10 2.3
