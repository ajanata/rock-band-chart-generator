<?php
	
	define("CHARTLIBVERSION", "0.3.1");

 
 
function makeChart($file, $diff, $game, $instrument, $name = null) {
    global $NAMES;
    $game = strtoupper($game);
	
	list ($measures, $notetrack, $songname, $events) = parseFile($file, strtoupper($diff), strtoupper($game), strtoupper($instrument));
	
	
	$x = 25;
	$y = 75;
	
	// something needs done about evenly matched measures
	for ($i = 0; $i < count($measures) - 1; $i++) {
   	    // this looks really weird doesn't it?
   	   if ($x + PXPERBEAT * $measures[$i]["numerator"] > WIDTH - 25) {
	       $x = 25;
	       $y += 110 + 5*DRAWPLAYERLINES - STAFFHEIGHT*($instrument == "drums");
	   }
	   if ($x + PXPERBEAT * $measures[$i]["numerator"] > WIDTH - 50 && $i != count($measures) - 1) {
	       $x = 25;
	       $y += 110 + 5*DRAWPLAYERLINES - STAFFHEIGHT*($instrument == "drums");
	   }
	   else {
	       $x += PXPERBEAT * $measures[$i]["numerator"];
	   }
	}
	
	global $HEIGHT;
	$HEIGHT = $y + 125;
	
	$im = imagecreate(WIDTH, $HEIGHT) or die("Cannot intialized new GD image");
	

// ugly hack
	global $white; $white = imagecolorallocate($im, 255, 255, 255);
 	global $black; $black = imagecolorallocate($im, 0, 0, 0);
	global $red; $red = imagecolorallocate($im, 255, 0, 0);
	global $gray; $gray = imagecolorallocate($im, 134, 134, 134);

	global $downbeatline; $downbeatline = imagecolorallocate($im, 150, 150, 150);
	global $upbeatline; $upbeatline = imagecolorallocate($im, 224, 224, 224);
	global $outline;  $outline = &$black;
	global $staffline; $staffline = &$downbeatline;
	global $tempo; $tempo = &$downbeatline;
	global $measnum; $measnum = imagecolorallocate($im, 200, 0, 0);
	global $sectionname; $sectionname = &$outline;
	global $measscore; $measscore = &$outline;
	global $cumscore; $cumscore = imagecolorallocate($im, 0, 100, 0);
	global $timesig; $timesig = &$downbeatline;
	global $player1; $player1 = imagecolorallocate($im, 255, 0, 0);
	global $player2; $player2 = imagecolorallocate($im, 0, 0, 255);
	global $solo;
	//$solo = imagecolorallocatealpha($im, 0, 0, 255, 110);
	$solo = imagecolorallocate($im, 224, 224, 255);
	global $fill;
	//$fill = imagecolorallocatealpha($im, 255, 210, 0, 86);
	$fill = imagecolorallocate($im, 255, 255, 204);
	global $whammy; $whammy = imagecolorallocate($im, 0, 0, 192);
	global $phrase;
	//$phrase = imagecolorallocatealpha($im, 0, 255, 0, 86);
	$phrase = imagecolorallocate($im, 192, 255, 192);

    global $noteColors, $silver, $lightsilver;
    $noteColors = array();
    $noteColors[] = imagecolorallocate($im, 0, 192, 0);
    $noteColors[] = imagecolorallocate($im, 255, 0, 0);
    $noteColors[] = imagecolorallocate($im, 253, 233, 16);
    $noteColors[] = imagecolorallocate($im, 0, 0, 192);
    $noteColors[] = imagecolorallocate($im, 255, 127, 0);
    $silver = imagecolorallocate($im, 168, 168, 168);
    $lightsilver = imagecolorallocate($im, 212, 212, 212);
    

	
	///////////
	
	
	imagefill($im, 0, 0, $white);
	
	imagestring($im, 5, 0, 0, ($name == null ? $file : $name), $black);
	imagestring($im, 5, 0, 15, strtolower($instrument), $black);
	imagestring($im, 5, 0, 30, strtolower($diff), $black);
	imagestring($im, 3, 0, $HEIGHT - 15, "WARNING: Work in progress. This information has NOT BEEN VERIFIED and MAY BE INCORRECT.", $red);
	imagestring($im, 3, WIDTH - 200, $HEIGHT - 27, "Generated by chartgen " . CHARTGENVERSION . ".", $gray);
	imagestring($im, 2, WIDTH - 200, $HEIGHT - 13, "chartlib " . CHARTLIBVERSION . " -- parselib " . PARSELIBVERSION, $gray);
	
	// key
	imagefilledrectangle($im, WIDTH-185, 0, WIDTH, 15 + DRAWPLAYERLINES*15, $lightsilver);
    imagestring($im, 3, WIDTH-180, 0, "Color Key", $black);
    imagestring($im, 3, WIDTH-110, 0, "Phrase", $phrase);
    imagestring($im, 3, WIDTH-64, 0, "Solo", $solo);
    imagestring($im, 3, WIDTH-30, 0, "Fill", $fill);
    if (DRAWPLAYERLINES) {
        imagestring($im, 3, WIDTH-110, 15, "Player 1", $player1);
        imagestring($im, 3, WIDTH-50, 15, "Player 2", $player2);
    }
	
	
	$x = 25;
	$y = 75;
	
	foreach($measures as $index => &$meas) {
	   
	   if ($x + PXPERBEAT * $meas["numerator"] > WIDTH - 25) {
	       $x = 25;
	       $y += 110 + 5*DRAWPLAYERLINES - STAFFHEIGHT*($instrument == "drums");
	   }
	   
	   drawMeasure($im, $x, $y, $meas, $notetrack, $events, $game, ($instrument == "drums"));

	   if ($x + PXPERBEAT * $meas["numerator"] > WIDTH - 50) {
	       $x = 25;
	       $y += 110 + 5*DRAWPLAYERLINES - STAFFHEIGHT*($instrument == "drums");
	   }
	   else {
	       $x += PXPERBEAT * $meas["numerator"];
	   }
	   
	}

	return array($im, $measures[count($measures)-1]["cscore"]);
} 
 


function drawMeasure ($im, $x, $y, $meas, $notes, $events, $game, $drums = false) {
    global $timebase, $black;//, $game;
	static $oldNum = 0;
	static $oldDenom = 0;
	static $oldBPM = 0;
	static $leftovers; if (!is_array($leftovers)) $leftovers = array();

	   // really freaking ugly hacks
	global $downbeatline; // if (!$downbeatline) $downbeatline = imagecolorallocate($im, 134, 134, 134);
	global $upbeatline; // if (!$upbeatline) $upbeatline = imagecolorallocate($im, 224, 224, 224);
	global $outline; if (!$outline) $outline = &$black;
	global $staffline; if (!$staffline) $staffline = &$downbeatline;
	global $tempo; if (!$tempo) $tempo = &$downbeatline;
	global $measnum; if (!$measnum) $measnum = imagecolorallocate($im, 200, 0, 0);
	global $sectionname; if (!$sectionname) $sectionname = &$outline;
	global $measscore; if (!$measscore) $measscore = &$outline;
	global $cumscore; if (!$cumscore) $cumscore = imagecolorallocate($im, 0, 100, 0);
	global $timesig; if (!$timesig) $timesig = &$downbeatline;
	global $player1; if (!$player1) $player1 = imagecolorallocate($im, 255, 0, 0);
	global $player2; if (!$player2) $player2 = imagecolorallocate($im, 0, 0, 255);
	global $solo; if (!$solo) $solo = imagecolorallocate($im, 134, 134, 255);
	global $phrase; //if (!$phrase) $phrase = &$downbeatline;  //&$upbeatline;
	global $fill; //if (!$fill) $fill = imagecolorallocate($im, 255, 127, 0);
	global $whammy; //if (!$whammy) $whammy = imagecolorallocate($im, 0, 0, 192);


	//////////////////////
	// check for event lines in this measure
    imagesetthickness($im, 2);
    imagealphablending($im, true);
	foreach ($events as $e) {
	   // cases to check:
	   //  wholly contained in this measure
	   //  goes through entire mesaure
	   //  starts before and ends in measure
	   //  starts in and ends after measure
	   
	   $c = 0;
	   $bY = 0;
	   switch ($e["type"]) {
	       case "fill":
	           $c = $fill;
	           $bY = $y;// - 25;
	           $beY = $y + STAFFHEIGHT*(4-$drums);
	           break;
           case "solo":
               $c = $solo;
               $bY = $y - 20;
               $beY = $y + 20 + STAFFHEIGHT*(4-$drums);
               
               // need to draw the number of notes in the solo too
               /*
               if ($e["end"] > $meas["time"] && $e["end"] <= $meas["time"] + $timebase*$meas["numerator"]) {
                   $tX = $e["end"] - $meas["time"];
                   $tX /= $timebase;
                   $tX *= PXPERBEAT;
                   $tX += $x + 2;
                   $tY = $y;
                   $tY -= 35;
                   imagestring($im, 2, $tX, $tY, $e["notes"] . " notes", $black);
               }
               */
               
               break;
           case "star":
               $c = $phrase;
               $bY = $y - 10;
               $beY = $y + 10 + STAFFHEIGHT*(4-$drums);
               break;
           case "p1":
               if (DRAWPLAYERLINES) {
                   $c = $player1;
                   $bY = $y - 25;
                   $beY = $bY;
               }
               break;
           case "p2":
               if (DRAWPLAYERLINES) {
                   $c = $player2;
                   $bY = $y - 29;
                   $beY = $bY;
               }
	   }
	   
	   if ($c == 0) continue;
	   
	   
	   if ($e["start"] >= $meas["time"] && $e["end"] <= $meas["time"] + $timebase*$meas["numerator"]) {
	       // wholly contained in this measure
	       $bX = $e["start"] - $meas["time"];
	       $bX /= $timebase;
	       $bX *= PXPERBEAT;
	       $bX += $x;
	       $beX = $e["end"] - $meas["time"];
	       $beX /= $timebase;
	       $beX *= PXPERBEAT;
	       $beX += $x;
	       if ($bY != $beY) {
	           imagefilledrectangle($im, $bX, $bY, $beX, $beY, $c);
	       }
	       else {
    	       imageline($im, $bX, $bY, $beX, $beY, $c);
	       }
	       
	       // draw number of notes in solo
	       if ($e["type"] == "solo") {
	           $tX = $e["end"] - $meas["time"];
                $tX /= $timebase;
                $tX *= PXPERBEAT;
                $tX += $x + 2;
                $tY = $y;
                $tY -= 35;
                imagestring($im, 2, $tX, $tY, $e["notes"] . " notes", $black);
	       }
   }
	   else if ($e["start"] < $meas["time"] && $e["end"] > $meas["time"] + $timebase*$meas["numerator"]) {
	       // goes through entire measure
	       $bX = $x;
	       $beX = $x + PXPERBEAT*$meas["numerator"];
	       if ($bY != $beY) {
	           imagefilledrectangle($im, $bX, $bY, $beX, $beY, $c);
	       }
	       else {
    	       imageline($im, $bX, $bY, $beX, $beY, $c);
	       }
	   }
	   else if ($e["start"] < $meas["time"] && $e["end"] >= $meas["time"] && $e["end"] <= $meas["time"] + $timebase*$meas["numerator"]) {
	       // starts before, ends in
	       $bX = $x;
	       $beX = $e["end"] - $meas["time"];
	       $beX /= $timebase;
	       $beX *= PXPERBEAT;
	       $beX += $x;
	       if ($bY != $beY) {
	           imagefilledrectangle($im, $bX, $bY, $beX, $beY, $c);
	       }
	       else {
    	       imageline($im, $bX, $bY, $beX, $beY, $c);
	       }
	       
	       // draw number of notes in solo
	       if ($e["type"] == "solo") {
	           $tX = $e["end"] - $meas["time"];
               $tX /= $timebase;
               $tX *= PXPERBEAT;
               $tX += $x + 2;
               $tY = $y;
               $tY -= 35;
               imagestring($im, 2, $tX, $tY, $e["notes"] . " notes", $black);
	       }
	   }
	   else if ($e["start"] >= $meas["time"] && $e["start"] <= $meas["time"] + $timebase*$meas["numerator"] && $e["end"] >= $meas["time"] + $timebase*$meas["numerator"]) {
	       // starts in, ends after
	       $bX = $e["start"] - $meas["time"];
	       $bX /= $timebase;
	       $bX *= PXPERBEAT;
	       $bX += $x;
           $beX = $x + PXPERBEAT*$meas["numerator"];
	       if ($bY != $beY) {
	           imagefilledrectangle($im, $bX, $bY, $beX, $beY, $c);
	       }
	       else {
    	       imageline($im, $bX, $bY, $beX, $beY, $c);
	       }
	   }
	}



	
	
	// measure outline
	imagesetthickness($im, 1);
	imageline($im, $x, $y, $x + (PXPERBEAT * $meas["numerator"]), $y, $outline);
	imageline($im, $x, $y + (STAFFHEIGHT * (4 - $drums)), $x + (PXPERBEAT * $meas["numerator"]), $y + (STAFFHEIGHT * (4 - $drums)), $outline);
	imagesetthickness($im, 1);
	imageline($im, $x, $y, $x, $y + (STAFFHEIGHT * (4 - $drums)), $outline);
	imageline($im, $x + (PXPERBEAT * $meas["numerator"]), $y, $x + (PXPERBEAT * $meas["numerator"]), $y + (STAFFHEIGHT * (4 - $drums)), $outline);
	
	// beat lines
	for ($i = 0; $i < $meas["numerator"]; $i++) {
		// up beat line
		imagesetthickness($im, 1);
		imageline($im, $x + ($i * PXPERBEAT + PXPERBEAT / 2.0), $y+1, $x + ($i * PXPERBEAT + PXPERBEAT / 2), $y-1 + (STAFFHEIGHT * (4 - $drums)), $upbeatline);
		
		// don't draw the down beat line for the last one
		if ($i+1 != $meas["numerator"]) {
			imagesetthickness($im, 1);
			imageline($im, $x + (($i+1) * PXPERBEAT), $y+1, $x + (($i+1) * PXPERBEAT), $y-1 + (STAFFHEIGHT * (4 - $drums)), $downbeatline);
		}
	}
	
	// staff lines
	for ($i = 1; $i < 4 - $drums; $i++) {
	   imagesetthickness($im, 1);
	   imageline($im, $x+1, $y + (STAFFHEIGHT * $i), $x-1 + (PXPERBEAT * $meas["numerator"]), $y + (STAFFHEIGHT * $i), $staffline);
	   
	}
	
	
	// time signature
	if ($meas["numerator"] != $oldNum || $meas["denominator"] != $oldDenom) {
		$oldNum = $meas["numerator"];
		$oldDenom = $meas["denominator"];
		
		imagestring($im, 5, $x+2, $y+2 - (3 * $drums), $oldNum, $timesig);
		imagestring($im, 5, $x+2, $y+2 + (STAFFHEIGHT * 2) - (4 * $drums), $oldDenom, $timesig);
	}
	
	
	// measure number
	imagestring($im, 2, $x, $y-14, $meas["number"], $measnum);
	
	
	// section name
	if (isset($meas["section"])) {
		imagestring($im, 2, $x + PXPERBEAT, $y-14, $meas["section"], $sectionname);
	}
	
	
	// measure score
	imagestring($im, 2, $x + (PXPERBEAT * $meas["numerator"]) - (strlen($meas["mscore"]) * 6), $y + (STAFFHEIGHT*(4-$drums)) + 2, $meas["mscore"], $measscore);
	
	
	// cumulative score
	// or, for drums, measure score outside of fills, but it doesn't really matter :)
	imagestring($im, 2, $x + (PXPERBEAT * $meas["numerator"]) - (strlen($meas["cscore"]) * 6), $y + (STAFFHEIGHT*(4-$drums)) + 11, $meas["cscore"], $cumscore);
	
	
	// tempo
	foreach ($meas["tempos"] as $bpm) {
		// blah
		if ($bpm["bpm"] != $oldBPM) {
		  $bX = $bpm["time"] - $meas["time"];
		  $bX /= $timebase;
		  $bX *= PXPERBEAT;
		  $bX += $x;
		  imagefilledellipse($im, $bX+2, $y-16, 5, 5, $tempo);
		  imageline($im, $bX+4, $y-16, $bX+4, $y-22, $tempo);
		  imagestring($im, 2, $bX+6, $y-25, "=".$bpm["bpm"], $tempo);
		  $oldBPM = $bpm["bpm"];
		}
	}
	
	
	
	////////////////////////////
	
	
    $newLeftovers = array();
    // take care of leftover sustains
    foreach($leftovers as $l) {
        
        $nY = STAFFHEIGHT;
        $nY *= $l["note"];
        $nY += $y;

        $eX = $l["duration"];
        if ($eX > $meas["numerator"]) {
            // this sustain goes into the next measure
            $ln = count($newLeftovers);
            $newLeftovers[$ln]["note"] = $l["note"];
            $newLeftovers[$ln]["duration"] = $l["duration"] - $meas["numerator"];
            $newLeftovers[$ln]["phrase"] = $l["phrase"];
            $newLeftovers[$ln]["color"] = $l["color"];
            $eX = $meas["numerator"];
        }
        $eX *= PXPERBEAT;
        $eX += $x;
        imagesetthickness($im, 3);
        imageline($im, $x-1, $nY, $eX, $nY, $l["color"]);
    
    }
    $leftovers = $newLeftovers;

	
	// notes
	$whammies = 0;
	foreach ($meas["notes"] as $nIndex => $note) {
		// draw the note
		$r = drawNote($im, $x, $y, $meas, $notes[$note], $game, $drums);
        // store any leftover sustains it gave us
		foreach ($r as $rr) {
		  $leftovers[] = $rr;
		}
		
		// see if this note has whammy beats
		// FIXME sustains that go into other measures are still displayed here
		if ($notes[$note]["phrase"] > 0 && $notes[$note]["duration"]) {
            $whammies += $notes[$note]["duration"] / $timebase;
		}

	}

	
	if ($whammies > 0) {
	   $whammies = round($whammies, 3);
	   $whammies .= " " . ($game == "RB" ? "OD" : "SP");
	   imagestring($im, 2, $x + (PXPERBEAT * $meas["numerator"]) - (strlen($whammies) * 6), $y + (STAFFHEIGHT*4) + 20, $whammies, $whammy);
	}
}




////////////////////////////////////////////////////

// $x and $y of the measure, this function figures out where to put inside the measure
function drawNote($im, $x, $y, $meas, $note, $game, $drums = false) {
    global $timebase, /*$game,*/ $NOTES, $black;
    //static $green, $red, $yellow, $blue, $orange;
    global $noteColors;
    // for OD notes
    global $silver, $lightsilver;

    
    

    $leftovers = array();
    $color = array();
    
    $sorted = $note["note"];
    sort($sorted);
    
    foreach(/*$note["note"]*/ $sorted as $n) {
        switch ($n) {
            case $NOTES[$game]["EASY"]["G"]:
            case $NOTES[$game]["MEDIUM"]["G"]:
            case $NOTES[$game]["HARD"]["G"]:
            case $NOTES[$game]["EXPERT"]["G"]:
                $color[] = 0;
                break;
                
            case $NOTES[$game]["EASY"]["R"]:
            case $NOTES[$game]["MEDIUM"]["R"]:
            case $NOTES[$game]["HARD"]["R"]:
            case $NOTES[$game]["EXPERT"]["R"]:
                $color[] = 1;
                break;
                
            case $NOTES[$game]["EASY"]["Y"]:
            case $NOTES[$game]["MEDIUM"]["Y"]:
            case $NOTES[$game]["HARD"]["Y"]:
            case $NOTES[$game]["EXPERT"]["Y"]:
                $color[] = 2;
                break;
                
            case $NOTES[$game]["EASY"]["B"]:
            case $NOTES[$game]["MEDIUM"]["B"]:
            case $NOTES[$game]["HARD"]["B"]:
            case $NOTES[$game]["EXPERT"]["B"]:
                $color[] = 3;
                break;
                
            case $NOTES[$game]["EASY"]["O"]:
            case $NOTES[$game]["MEDIUM"]["O"]:
            case $NOTES[$game]["HARD"]["O"]:
            case $NOTES[$game]["EXPERT"]["O"]:
                $color[] = 4;
                break;
        }
    }
    
    
    $nX = $note["time"] - $meas["time"];
    $nX /= $timebase;
    $nX *= PXPERBEAT;
    $nX += $x;
    foreach ($color as $n) {
        if (!$drums) {
            $nY = STAFFHEIGHT;
            $nY *= $n;
            $nY += $y;
            
            $drawColor = 0;
            
            if (strtolower($game) == "rb") {
                if ($note["phrase"] != 0) {
                    // OD phrase, so make it silver
                    $drawColor = $silver;
                }
                else {
                    $drawColor = $noteColors[$n];
                }
                
                imagesetthickness($im, 3);
                imageline($im, $nX, $nY-4, $nX, $nY+4, $drawColor);
                imagesetthickness($im, 1);
                if ($note["phrase"] > 0) {
                    imageline($im, $nX, $nY-2, $nX, $nY+2, $lightsilver);
                }
                imageline($im, $nX-1, $nY-5, $nX+1, $nY-5, $black);
                imageline($im, $nX-1, $nY+5, $nX+1, $nY+5, $black);
                
                if ($note["duration"] > 0) {
                    $eX = $note["time"] + $note["duration"] - $meas["time"];
                    $eX /= $timebase;
                    // $eX is end beat of the note w.r.t. start beat of measure
                    
                    if ($eX > $meas["numerator"]) {
                        // this sustain goes into the next measure
                        $l = count($leftovers);
                        $leftovers[$l]["note"] = $n;
                        $leftovers[$l]["duration"] = $eX - $meas["numerator"];
                        $leftovers[$l]["phrase"] = $note["phrase"];
                        $leftovers[$l]["color"] = $drawColor;
                        $eX = $meas["numerator"];
                    }
                    
                    $eX *= PXPERBEAT;
                    $eX += $x;
                    imagesetthickness($im, 3);
                    imageline($im, $nX+1, $nY, $eX, $nY, $drawColor);
                }
               
            }
            else {
               // TODO: draw GH notes
               
               
            }
        }
        else {
            // drums
            $nY = STAFFHEIGHT;
            $nY *= ($n-1);
            $nY += $y;
            
            $drawColor = 0;
            
            if ($note["phrase"] != 0) {
                // OD phrase, so make it silver
                $drawColor = $silver;
            }
            else {
                // drums are weird.
                // green is kick, orange is green
                if ($n == 0) {
                    // green
                    $drawColor = $noteColors[4];    // kicks are drawn orange
                }
                else if ($n == 4) {
                    // orange
                    $drawColor = $noteColors[0];    // actually a green note
                }
                else {
                    // red, yellow, or blue, so leave it alone
                    $drawColor = $noteColors[$n];
                }
            } // phrase != 0
        

            imagesetthickness($im, 3);
            if ($n != 0) {
                // not a kick
                imageline($im, $nX, $nY-4, $nX, $nY+4, $drawColor);
                imagesetthickness($im, 1);
                /*
                if ($note["phrase"] > 0) {
                    imageline($im, $nX, $nY-2, $nX, $nY+2, $lightsilver);
                }
                */
                imageline($im, $nX-1, $nY-5, $nX+1, $nY-5, $black);
                imageline($im, $nX-1, $nY+5, $nX+1, $nY+5, $black);
            }
            else {
                // it's a kick...
                imageline($im, $nX, $y-1, $nX, $y+2+STAFFHEIGHT*3, $drawColor);
                imagesetthickness($im, 1);
                if ($note["phrase"] > 0) {
                    imageline($im, $nX, $y, $nX, $y+1+STAFFHEIGHT*3, $lightsilver);
                }
                imageline($im, $nX-1, $y-2, $nX+1, $y-2, $black);
                imageline($im, $nX-1, $y+3+STAFFHEIGHT*3, $nX+1, $y+3+STAFFHEIGHT*3, $black);
            }
        
            
        }
        
    }
    
    return $leftovers;
    
}


?>